<#
.SYNOPSIS
    This script reinstalls the Liongard Windows Agent. It can optionally configure the
    agent service to run as a specific user and automatically set the required folder permissions.

.DESCRIPTION
    1. Uninstalls any previous version of the Liongard or Roar agent.
    2. Downloads the latest agent MSI installer.
    3. Installs the agent using the provided instance details.
    4. (Optional) Configures the agent to use a specific service account.
    5. (Optional) Applies 'Full Control' permissions for that service account to the agent's folder.

.NOTES
    Version: 2.0
    Author: Liongard Solutions Engineering - Lamont Largie
    IMPORTANT: This script MUST be run with Administrator privileges to install software
    and modify folder permissions in 'C:\Program Files (x86)\'.
#>

#region User-configurable variables
#================================================================================
# PARTNER ACTION REQUIRED: Fill in the variables below.
#================================================================================

# --- Service Account & Permissions ---

# Provide the service account credentials here.
# IMPORTANT: The username must be in the format DOMAIN\Username or COMPUTERNAME\Username (for local accounts).
# Example for a local account: $LiongardSvcUsername = "$env:COMPUTERNAME\liongard-svc"
# Example for a domain account: $LiongardSvcUsername = "YOURDOMAIN\liongard-svc"
$LiongardSvcUsername = "DOMAIN\service-account" # <-- EDIT THIS
$LiongardSvcPassword = "PastePasswordHere"     # <-- EDIT THIS

# Set to $true to automatically apply folder permissions for the account above.
# Set to $false to skip this step.
$SetPermissions = $true

# --- Liongard Instance Details (Required) ---
$URL="XXX.app.liongard.com"
$Key="PasteKeyHere"
$Secret="PasteSecretHere"
$EnvironmentName="PasteEnvironmentName/RMM Variable"
#endregion


# --- Script Body (No edits needed below this line) ---
Write-Host "Starting Liongard Agent Reinstall Script..." -ForegroundColor Cyan

$Folder='C:\Liongard'
$AgentInstallPath = "C:\Program Files (x86)\LiongardInc\LiongardAgent"

# Set modern security protocol for downloads
[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.SecurityProtocolType]::Tls12

# --- 1. Uninstall Previous Versions ---
Write-Host "`n--- Checking for previous agent installs..." -ForegroundColor Cyan
$application = Get-WmiObject -Class Win32_Product -Filter "Name = 'Liongard Agent'" -ErrorAction SilentlyContinue
$application2 = Get-WmiObject -Class Win32_Product -Filter "Name = 'RoarAgent'" -ErrorAction SilentlyContinue

if ($application) {
    Write-Host "Found 'Liongard Agent'. Uninstalling..."
    $application.Uninstall() | Out-Null
    Start-Sleep -Seconds 15
}
elseif ($application2) {
    Write-Host "Found 'RoarAgent'. Uninstalling..."
    $application2.Uninstall() | Out-Null
    Start-Sleep -Seconds 15
}
else {
    Write-Host "No previous agent install was found."
}

# --- 2. Download Installer ---
Write-Host "`n--- Preparing download location..." -ForegroundColor Cyan
if (-not (Test-Path -Path $Folder)) {
    Write-Host "Creating download folder at $Folder."
    New-Item -Path $Folder -ItemType Directory -ErrorAction SilentlyContinue | Out-Null
